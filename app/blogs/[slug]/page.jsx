const BLOGS_ENDPOINT='https://iv-blogs.ivhub.com/blogslist';
async function getBlogs(){const res=await fetch(BLOGS_ENDPOINT,{ next:{ revalidate:3600 }});if(!res.ok) throw new Error('Failed to fetch blogs');return res.json();}
export async function generateStaticParams(){const data=await getBlogs();const items=data?.articlesData??[];return items.map(b=>({slug:b.title.replace(/\s+/g,'-')}));}
export async function generateMetadata({params}){const data=await getBlogs();const items=data?.articlesData??[];const blog=items.find(b=>b.title.replace(/\s+/g,'-')===params.slug);if(!blog) return { title:'Blog not found' };const desc=(blog.metaDesc||blog.desc?.replace(/<[^>]+>/g,'')||'').slice(0,160);const url=`https://ivhub.com/blogs/${params.slug}`;return{title:blog.title,description:desc,openGraph:{title:blog.title,description:desc,url,images:[`/assets/img/blog/${blog.img}`]},alternates:{canonical:url}};}
export default async function BlogPage({params}){const data=await getBlogs();const items=data?.articlesData??[];const blog=items.find(b=>b.title.replace(/\s+/g,'-')===params.slug);if(!blog) return <main style={{padding:'2rem'}}>Not found</main>;return(<main style={{padding:'2rem'}}><h1>{blog.title}</h1><article dangerouslySetInnerHTML={{__html:blog.desc}}/></main>);} 
